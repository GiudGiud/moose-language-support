{"blocks":{"Adaptivity":{"actions":{"SetAdaptivityOptionsAction":{"action_path":"Adaptivity","description":"Action for defining adaptivity parameters.","file_info":{"/home/schwd/Programs/moose/framework/src/base/Moose.C":535},"label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"cycles_per_step":{"basic_type":"Integer","controllable":false,"cpp_type":"unsigned int","default":"1","deprecated":false,"description":"The number of adaptive steps to use when on each timestep during a Transient simulation.","group_name":"","name":"cycles_per_step","options":"","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/SetAdaptivityOptionsAction.C","tasks":{"add_algebraic_rm":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/SetAdaptivityOptionsAction.C":18}},"add_geometric_rm":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/SetAdaptivityOptionsAction.C":17}},"set_adaptivity_options":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/SetAdaptivityOptionsAction.C":16}}}}},"subblocks":{"Indicators":{"star":{"actions":{"AddElementalFieldAction":{"action_path":"Adaptivity/Indicators/*","description":"Adds elemental auxiliary variable for adaptivity system.","file_info":{"/home/schwd/Programs/moose/framework/src/base/Moose.C":525},"label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"family":{"basic_type":"String","controllable":false,"cpp_type":"MooseEnum","default":"LAGRANGE","deprecated":false,"description":"Specifies the family of FE shape functions to use for this variable","group_name":"","name":"family","options":"LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC MONOMIAL_VEC RATIONAL_BERNSTEIN SIDE_HIERARCHIC","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/AddElementalFieldAction.C","tasks":{"add_elemental_field_variable":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddElementalFieldAction.C":17}}}},"AddIndicatorAction":{"action_path":"Adaptivity/Indicators/*","description":"Add an Indicator object to a simulation.","file_info":{"/home/schwd/Programs/moose/framework/src/base/Moose.C":526},"label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"inactive":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"","deprecated":false,"description":"If specified blocks matching these identifiers will be skipped.","group_name":"","name":"inactive","options":"","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/AddIndicatorAction.C","tasks":{"add_indicator":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddIndicatorAction.C":13}}}}},"associated_types":["IndicatorName"],"subblock_types":{"AnalyticalIndicator":{"description":"Compute the square of the error as the difference between an unknown variable and an analytical solution.","file_info":{"/home/schwd/Programs/moose/framework/src/indicators/AnalyticalIndicator.C":13},"label":"MooseApp","moose_base":"Indicator","parameters":{"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","default":"ANY_BLOCK_ID ","deprecated":false,"description":"block ID or name where the object works","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false},"control_tags":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","deprecated":false,"description":"Adds user-defined labels for accessing object parameters via control logic.","group_name":"Advanced","name":"control_tags","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"Adaptivity/Indicators/*","register_file":"/home/schwd/Programs/moose/framework/src/indicators/AnalyticalIndicator.C","syntax_path":"Adaptivity/Indicators/AnalyticalIndicator"},"ArrayMooseVariable":{"description":"Used for grouping standard field variables with the same finite element family and order","file_info":{"/home/schwd/Programs/moose/framework/src/variables/ArrayMooseVariable.C":12},"label":"MooseApp","moose_base":"MooseVariableBase","parameters":{"array":{"basic_type":"Boolean","controllable":false,"cpp_type":"bool","default":"0","deprecated":false,"description":"True to make this variable a array variable regardless of number of components. If 'components' > 1, this will automatically be set to true.","group_name":"","name":"array","options":"","out_of_range_allowed":false,"required":false},"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","deprecated":false,"description":"The list of blocks (ids or names) that this object will be applied","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"Adaptivity/Indicators/*","register_file":"/home/schwd/Programs/moose/framework/src/variables/ArrayMooseVariable.C","syntax_path":"Adaptivity/Indicators/ArrayMooseVariable"}}}},"Markers":{"star":{"actions":{"AddElementalFieldAction":{"action_path":"Adaptivity/Markers/*","description":"Adds elemental auxiliary variable for adaptivity system.","file_info":{"/home/schwd/Programs/moose/framework/src/base/Moose.C":530},"label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"family":{"basic_type":"String","controllable":false,"cpp_type":"MooseEnum","default":"LAGRANGE","deprecated":false,"description":"Specifies the family of FE shape functions to use for this variable","group_name":"","name":"family","options":"LAGRANGE MONOMIAL HERMITE SCALAR HIERARCHIC CLOUGH XYZ SZABAB BERNSTEIN L2_LAGRANGE L2_HIERARCHIC NEDELEC_ONE LAGRANGE_VEC MONOMIAL_VEC RATIONAL_BERNSTEIN SIDE_HIERARCHIC","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/AddElementalFieldAction.C","tasks":{"add_elemental_field_variable":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddElementalFieldAction.C":17}}}},"AddMarkerAction":{"action_path":"Adaptivity/Markers/*","description":"Add a Marker object to a simulation.","file_info":{"/home/schwd/Programs/moose/framework/src/base/Moose.C":531},"label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"inactive":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"","deprecated":false,"description":"If specified blocks matching these identifiers will be skipped.","group_name":"","name":"inactive","options":"","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/AddMarkerAction.C","tasks":{"add_marker":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddMarkerAction.C":13}}}}},"associated_types":["MarkerName"],"subblock_types":{"ArrayMooseVariable":{"description":"Used for grouping standard field variables with the same finite element family and order","file_info":{"/home/schwd/Programs/moose/framework/src/variables/ArrayMooseVariable.C":12},"label":"MooseApp","moose_base":"MooseVariableBase","parameters":{"array":{"basic_type":"Boolean","controllable":false,"cpp_type":"bool","default":"0","deprecated":false,"description":"True to make this variable a array variable regardless of number of components. If 'components' > 1, this will automatically be set to true.","group_name":"","name":"array","options":"","out_of_range_allowed":false,"required":false},"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","deprecated":false,"description":"The list of blocks (ids or names) that this object will be applied","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"Adaptivity/Markers/*","register_file":"/home/schwd/Programs/moose/framework/src/variables/ArrayMooseVariable.C","syntax_path":"Adaptivity/Markers/ArrayMooseVariable"},"BoundaryMarker":{"description":"Marks all elements with sides on a given boundary for refinement/coarsening","file_info":{"/home/schwd/Programs/moose/framework/src/markers/BoundaryMarker.C":12},"label":"MooseApp","moose_base":"Marker","parameters":{"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","deprecated":false,"description":"The list of blocks (ids or names) that this object will be applied","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false},"control_tags":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","deprecated":false,"description":"Adds user-defined labels for accessing object parameters via control logic.","group_name":"Advanced","name":"control_tags","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"Adaptivity/Markers/*","register_file":"/home/schwd/Programs/moose/framework/src/markers/BoundaryMarker.C","syntax_path":"Adaptivity/Markers/BoundaryMarker"}}}}},"types":null},"AuxKernels":{"star":{"actions":{"AddKernelAction":{"action_path":"AuxKernels/*","description":"Add a Kernel object to the simulation.","label":"MooseApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"inactive":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"","deprecated":false,"description":"If specified blocks matching these identifiers will be skipped.","group_name":"","name":"inactive","options":"","out_of_range_allowed":false,"required":false}},"register_file":"/home/schwd/Programs/moose/framework/src/actions/AddKernelAction.C","tasks":{"add_aux_kernel":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddKernelAction.C":15}},"add_kernel":{"file_info":{"/home/schwd/Programs/moose/framework/src/actions/AddKernelAction.C":13}}}}},"subblock_types":{"ACBulkFreeEnergy":{"description":"Bulk free energy contribution from the Allen-Cahn part of the Kernels/PolycrystalKernel action","file_info":{"/home/schwd/Programs/marmot/src/auxkernels/ACBulkFreeEnergy.C":17},"label":"MarmotApp","moose_base":"AuxKernel","parameters":{"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","deprecated":false,"description":"The list of blocks (ids or names) that this object will be applied","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false},"boundary":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<BoundaryName>","deprecated":false,"description":"The list of boundaries (ids or names) from the mesh where this boundary condition applies","group_name":"","name":"boundary","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"AuxKernels/*","register_file":"/home/schwd/Programs/marmot/src/auxkernels/ACBulkFreeEnergy.C","syntax_path":"AuxKernels/ACBulkFreeEnergy"},"ADDivergenceAux":{"description":"Computes the divergence of a vector of functors.","file_info":{"/home/schwd/Programs/moose/framework/src/auxkernels/DivergenceAux.C":14},"label":"MooseApp","moose_base":"AuxKernel","parameters":{"block":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<SubdomainName>","deprecated":false,"description":"The list of blocks (ids or names) that this object will be applied","group_name":"","name":"block","options":"","out_of_range_allowed":false,"required":false},"boundary":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<BoundaryName>","deprecated":false,"description":"The list of boundaries (ids or names) from the mesh where this boundary condition applies","group_name":"","name":"boundary","options":"","out_of_range_allowed":false,"required":false}},"parent_syntax":"AuxKernels/*","register_file":"/home/schwd/Programs/moose/framework/src/auxkernels/DivergenceAux.C","syntax_path":"AuxKernels/ADDivergenceAux"}}},"subblocks":{"MatVecRealGradAuxKernel":{"actions":{"MatVecRealGradAuxKernelAction":{"action_path":"AuxKernels/MatVecRealGradAuxKernel","description":"","file_info":{"/home/schwd/Programs/moose/modules/phase_field/src/base/PhaseFieldApp.C":50},"label":"PhaseFieldApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"dim":{"basic_type":"Integer","controllable":false,"cpp_type":"unsigned int","deprecated":false,"description":"the dimensions of the mesh","group_name":"","name":"dim","options":"","out_of_range_allowed":false,"required":true}},"register_file":"/home/schwd/Programs/moose/modules/phase_field/src/action/MatVecRealGradAuxKernelAction.C","tasks":{"add_aux_kernel":{"file_info":{"/home/schwd/Programs/moose/modules/phase_field/src/action/MatVecRealGradAuxKernelAction.C":15}}}}},"types":null},"MaterialVectorAuxKernel":{"actions":{"MaterialVectorAuxKernelAction":{"action_path":"AuxKernels/MaterialVectorAuxKernel","description":"","file_info":{"/home/schwd/Programs/moose/modules/phase_field/src/base/PhaseFieldApp.C":51},"label":"PhaseFieldApp","parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"grain_num":{"basic_type":"Integer","controllable":false,"cpp_type":"unsigned int","deprecated":false,"description":"Value that specifies the number of grains to create aux kernels for.","group_name":"","name":"grain_num","options":"","out_of_range_allowed":false,"required":true}},"register_file":"/home/schwd/Programs/moose/modules/phase_field/src/action/MaterialVectorAuxKernelAction.C","tasks":{"add_aux_kernel":{"file_info":{"/home/schwd/Programs/moose/modules/phase_field/src/action/MaterialVectorAuxKernelAction.C":15}}}}},"types":null}}}},"global":{"associated_types":{"AuxVariableName":["AuxVariables/*"],"FunctionName":["Functions/*"],"IndicatorName":["Adaptivity/Indicators/*"],"MarkerName":["Adaptivity/Markers/*"],"MultiAppName":["MultiApps/*"],"NonlinearVariableName":["Variables/*"],"OutputName":["Outputs/*"],"PostprocessorName":["Postprocessors/*"],"ReporterName":["Reporters/*"],"UserObjectName":["Postprocessors/*","UserObjects/*"],"VariableName":["AuxVariables/*","Variables/*"],"VectorPostprocessorName":["VectorPostprocessors/*"]},"parameters":{"active":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"__all__ ","deprecated":false,"description":"If specified only the blocks named will be visited and made active","group_name":"","name":"active","options":"","out_of_range_allowed":false,"required":false},"inactive":{"basic_type":"Array:String","controllable":false,"cpp_type":"std::vector<std::string>","default":"","deprecated":false,"description":"If specified blocks matching these identifiers will be skipped.","group_name":"","name":"inactive","options":"","out_of_range_allowed":false,"required":false}},"registered_apps":["MarmotApp"]}}